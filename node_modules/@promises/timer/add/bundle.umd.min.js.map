{"version":3,"file":"bundle.umd.min.js","sources":["index.ts","../index.ts"],"sourcesContent":["import Promises from '@promises/core';\nimport timer from '../';\n\nPromises._setOnPrototype('timer', timer);\n\nexport default Promises;\n\ndeclare module '@promises/core' {\n    interface Promises<T> {\n        /**\n         * @example\n         *\n         *  let promises: Promises<string> = Promises.resolve<string>('foo').delay(3000);\n         *\n         *  promises.timer(1500, 'error: timeout').catch((error: string) => {\n         *      console.log(error); // error => 'error: timeout'\n         *  });\n         */\n        timer(ms?: number, error?: any): Promises<T>;\n    }\n}\n","/**\r\n * @module @promises/timer\r\n * @copyright Â© 2017 Yisrael Eliav <yisraelx@gmail.com> (https://github.com/yisraelx)\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * @function\r\n * @param ms The number of milliseconds that if no resolve then reject with `error`\r\n * @param message The error message for the rejection\r\n * @example\r\n *\r\n *  let promise: Promise<string> = Promise.resolve<string>('foo').delay(3000);\r\n *\r\n *  timer(promise, 1500, 'error: timeout').catch((error: string) => {\r\n *      console.log(error); // error => 'error: timeout'\r\n *  });\r\n */\r\nfunction timer<T>(promise: Promise<T>, ms?: number, message?: any): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n        let isExecute = false;\r\n        setTimeout(() => {\r\n            if (isExecute === false) reject(message);\r\n            isExecute = true;\r\n        }, ms);\r\n        Promise.resolve(promise).then((x: any) => {\r\n            if (isExecute === false) resolve(x);\r\n            isExecute = true;\r\n\r\n        }, reject);\r\n    });\r\n}\r\n\r\nexport default timer;\r\n"],"names":["Promises","_setOnPrototype","promise","ms","message","Promise","resolve","reject","isExecute","setTimeout","then","x"],"mappings":";;;;;mPAGAA,EAASC,gBAAgB,QCezB,SAAkBC,EAAqBC,EAAaC,GAChD,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IAAIC,GAAY,EAChBC,WAAW,YACW,IAAdD,GAAqBD,EAAOH,GAChCI,GAAY,GACbL,GACHE,QAAQC,QAAQJ,GAASQ,KAAK,SAACC,IACT,IAAdH,GAAqBF,EAAQK,GACjCH,GAAY,GAEbD"}