{"version":3,"file":"index.es6.js","sources":["index.ts"],"sourcesContent":["/**\n * @module @promises/core\n * @copyright Â© 2017 Yisrael Eliav <yisraelx@gmail.com> (https://github.com/yisraelx)\n * @license MIT\n */\n\ndeclare let ES6Promise: typeof Promise;\nlet basePromise: typeof Promise = typeof Promise !== 'undefined' ? Promise : ES6Promise;\n\nif (typeof basePromise === 'undefined') {\n    throw new Error(`Missing Promise support, the requirements are a global \"Promise\" (native or polyfill).`);\n}\n\nexport class Promises<T> extends basePromise<T> {\n}\n\ntry {\n    (exports).Promises = ((Promises as any) = Function(`Promise`, `return class Promises extends Promise{};`)(basePromise));\n} catch (e) {\n\n}\n\nexport namespace Promises {\n    export function _setOnConstructor(key: string, fn: Function, wrap: boolean = true): void {\n        this[key] = this[key] || wrap ? function () {\n            let result = fn.apply(this, arguments);\n            return this.resolve(result);\n        } : fn;\n    }\n\n    export function _setOnPrototype(key: string, fn: Function, wrap: boolean = true): void {\n        this.prototype[key] = this.prototype[key] || wrap ? function () {\n            let {length} = arguments;\n            let args = Array(length + 1);\n            args[0] = this;\n            for (let i = 1; i <= length; i++) {\n                args[i] = arguments[i - 1];\n            }\n            let result = fn.apply(this, args);\n            return this.constructor.resolve(result);\n        } : fn;\n    }\n}\n\n/**\n * @source typescript/lib/lib.es6.d.ts\n * @override Promise methods return type (from Promise to Promises)\n */\nexport interface Promises<T> {\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promises<TResult1 | TResult2>;\n\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promises<T | TResult>;\n}\n\n/**\n * @source typescript/lib/lib.es6.d.ts\n * @override Promise static methods return type (from Promise to Promises)\n */\nexport declare namespace Promises {\n    export function all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promises<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\n    export function all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promises<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\n    export function all<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promises<[T1, T2, T3, T4, T5, T6, T7, T8]>;\n    export function all<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promises<[T1, T2, T3, T4, T5, T6, T7]>;\n    export function all<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promises<[T1, T2, T3, T4, T5, T6]>;\n    export function all<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promises<[T1, T2, T3, T4, T5]>;\n    export function all<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promises<[T1, T2, T3, T4]>;\n    export function all<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promises<[T1, T2, T3]>;\n    export function all<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promises<[T1, T2]>;\n    export function all<T>(values: (T | PromiseLike<T>)[]): Promises<T[]>;\n\n    export function race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promises<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;\n    export function race<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promises<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\n    export function race<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promises<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n    export function race<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promises<T1 | T2 | T3 | T4 | T5 | T6 | T7>;\n    export function race<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promises<T1 | T2 | T3 | T4 | T5 | T6>;\n    export function race<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promises<T1 | T2 | T3 | T4 | T5>;\n    export function race<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promises<T1 | T2 | T3 | T4>;\n    export function race<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promises<T1 | T2 | T3>;\n    export function race<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promises<T1 | T2>;\n    export function race<T>(values: (T | PromiseLike<T>)[]): Promises<T>;\n\n    export function reject(reason: any): Promises<never>;\n    export function reject<T>(reason: any): Promises<T>;\n\n    export function resolve<T>(value: T | PromiseLike<T>): Promises<T>;\n    export function resolve(): Promises<void>;\n}\n\nexport default Promises;\n"],"names":[],"mappings":";;;;;AAOA,IAAI,WAAW,GAAmB,OAAO,OAAO,KAAK,WAAW,GAAG,OAAO,GAAG,UAAU,CAAC;AAExF,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;IACpC,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;CAC7G;AAEM,cAAkB,SAAQ,WAAc;CAC9C;AAED,IAAI;IACA,CAAC,OAAO,EAAE,QAAQ,IAAK,QAAgB,GAAG,QAAQ,CAAC,SAAS,EAAE,0CAA0C,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;CAC3H;AAAC,OAAO,CAAC,EAAE;CAEX;AAED,WAAiB,QAAQ;IACrB,2BAAkC,GAAW,EAAE,EAAY,EAAE,OAAgB,IAAI;QAC7E,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG;YAC5B,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC/B,GAAG,EAAE,CAAC;KACV;IALe,0BAAiB,oBAKhC,CAAA;IAED,yBAAgC,GAAW,EAAE,EAAY,EAAE,OAAgB,IAAI;QAC3E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG;YAChD,IAAI,EAAC,MAAM,EAAC,GAAG,SAAS,CAAC;YACzB,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9B,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC9B;YACD,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAClC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC3C,GAAG,EAAE,CAAC;KACV;IAXe,wBAAe,kBAW9B,CAAA;CACJ,EApBgB,QAAQ,KAAR,QAAQ,QAoBxB;AA8CD,iBAAe,QAAQ,CAAC;;;;;"}